name: Deploy todo-app

on:
  workflow_dispatch:
#  push:
#    branches: [main]
    
env:
  AZURE_CONTAINER_REGISTRY: simple-todo
  AZURE_RESOURCE_GROUP: simple-todo
  APP_CONTAINER_NAME: simple-todo
  APP_IMAGE_NAME: todo/simple

jobs:

  migrate-database:
    name: Apply database migrations
    runs-on: ubuntu-latest

    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Add GitHub Runner IP to Cosmos DB Firewall
        env:
          RESOURCE_GROUP: simple-todo
          CLUSTER_NAME: todo-cospos-dev
        run: |
          # Get the public IP of the GitHub Actions runner
          RUNNER_IP=$(curl -s https://api.ipify.org)
          
          # Add the IP to the Cosmos DB cluster allowlist
          az cosmosdb postgres firewall-rule create \
          --resource-group $RESOURCE_GROUP \
          --cluster-name $CLUSTER_NAME \
          --firewall-rule-name allow-github-runner \
          --start-ip-address $RUNNER_IP \
          --end-ip-address $RUNNER_IP

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Download grate
        run: curl -sL https://github.com/erikbra/grate/releases/download/1.8.0/grate_1.8.0-1_amd64.deb -o /tmp/grate_1.8.0-1_amd64.deb

      - name: Install grate
        run: sudo dpkg -i /tmp/grate_1.8.0-1_amd64.deb

      - name: Verify grate installation
        run: grate --help

      - name: Deploy
        run: grate --databasetype postgresql --connectionstring "${{ secrets.AZURE_DB_CONNECTION_STRING }}" --sqlfilesdirectory ${{ github.workspace }}/src/Services/Facilities/infrastructure/db 

      - name: Remove GitHub Runner IP from Cosmos DB Firewall
        if: always()
        env:
          RESOURCE_GROUP: simple-todo
          CLUSTER_NAME: todo-cospos-dev
        run: |
          az cosmosdb postgres firewall-rule delete \
            --resource-group $RESOURCE_GROUP \
            --cluster-name $CLUSTER_NAME \
            --firewall-rule-name allow-github-runner \
            --subscription "<subscription_id>" \
            --yes

  build-and-push-to-regsitry:
    runs-on: ubuntu-latest
    needs: migrate-database

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.x.x"

      - name: Build
        run: dotnet build --configuration Release

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
          username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}

      - name: Build and push container image to ACR
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:src/SimpleTodo"
          push: true 
          tags: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.APP_IMAGE_NAME }}:latest
